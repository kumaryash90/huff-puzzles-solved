/** 
 *  BASIC_BANK HUFF EXERCISE
 *  
 *  The task is to create a basic bank with huff
 * functionalities include
 *      - depositing tokens via similar to how solidity's `receive` function works
 *      - withdrawing tokens
 *      - keeping track of and viewing balance
 */

#define function balanceOf(address) payable returns(uint256)
#define function withdraw(uint256) payable returns()

#define constant POINTER = FREE_STORAGE_POINTER()

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr

    dup1 __FUNC_SIG(balanceOf) eq balance jumpi
    dup1 __FUNC_SIG(withdraw) eq withdraw jumpi
    
    0x00 0x00 revert

    balance:
        BALANCE_OF()

    withdraw:
        WITHDRAW()

    deposit:
        DEPOSIT()
}

#define macro BALANCE_OF() = takes(0) returns(0) {
    0x04 calldataload
    0x00
    mstore

    0x20 0x00 sha3

    sload

    0x20 mstore

    0x20 0x20 return
}

#define macro WITHDRAW() = takes(0) returns(0) {
    0x00
    0x00
    0x00
    0x00


    caller
    0x00
    mstore
    0x20 0x00 sha3

    0x04 calldataload

    dup2
    sload

    sub

    dup2
    sstore
    pop

    0x04 calldataload

    caller
    gas

    call
}

#define macro DEPOSIT() = takes(0) returns(0) {
    callvalue

    caller
    0x00
    mstore
    0x20 0x00 sha3

    sstore
}
